{"version":3,"sources":["sounds/click2.wav","components/Header.js","components/Metronome.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Metronome","props","buttonTxt","isPlaying","bpm","type","min","max","onChange","onChangeInput","onClick","startMetronome","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","state","clearInterval","metronome","setInterval","play","setState","target","value","click2","Audio","src_components_Header","src_components_Metronome","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6OCmBzBC,SAhBA,WAEX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,KAAJ,YAAkDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,KAAlD,WCYLC,SArBG,SAACC,GAEf,IAAIC,EAAY,QAQhB,OALIA,EADDD,EAAME,UACO,OAEA,QAIZP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeE,EAAMG,IAApC,QACAR,EAAAC,EAAAC,cAAA,SAAOO,KAAK,QAAQC,IAAI,KAAKC,IAAI,MAAMC,SAAUP,EAAMQ,iBAEvDb,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2BW,QAAST,EAAMU,gBAAiBT,sBCkD9EU,cA/DX,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMf,KASVQ,cAAgB,SAACW,GAETP,EAAKQ,MAAMlB,WACXmB,cAAcT,EAAKU,WACnBV,EAAKU,UAAYC,YAAYX,EAAKY,KAAO,GAAKZ,EAAKQ,MAAMjB,IAAO,KAEhES,EAAKa,SAAS,CACZtB,IAAKgB,EAAEO,OAAOC,SAGhBf,EAAKa,SAAS,CAAEtB,IAAKgB,EAAEO,OAAOC,SApBnBf,EAwBnBY,KAAO,WACHZ,EAAKgB,OAAOJ,QAzBGZ,EA4BnBF,eAAiB,WACVE,EAAKQ,MAAMlB,WACVmB,cAAcT,EAAKU,WACnBV,EAAKa,SAAS,CACVvB,WAAW,MAGfU,EAAKU,UAAYC,YACbX,EAAKY,KACJ,GAAKZ,EAAKQ,MAAMjB,IAAO,KAE1BS,EAAKa,SACH,CACEvB,WAAW,GAEbU,EAAKY,QAzCbZ,EAAKQ,MAAQ,CACTjB,IAAK,GACLD,WAAW,GAGfU,EAAKgB,OAAS,IAAIC,MAAMD,KAPThB,wEAiDf,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAD,CACIvB,cAAeO,KAAKP,cACpBL,IAAKY,KAAKK,MAAMjB,IAChBO,eAAgBK,KAAKL,eACrBR,UAAWa,KAAKK,MAAMlB,oBAzDxB8B,IAAMC,iBCAxBC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.003cc930.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click2.fe0ded65.wav\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header className=\"header-container\">\r\n            <div className=\"header-row\">\r\n                <div className=\"header-icon\">\r\n                    <i className=\"fas fa-guitar color-text\"></i>\r\n                </div>\r\n                <div className=\"header-text\">\r\n                    <h1><span className=\"color-text\">M</span>etronome <span className=\"color-text\">A</span>pp</h1>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Metronome.css';\r\n\r\nconst Metronome = (props) => {\r\n\r\n    let buttonTxt = 'Start';\r\n    \r\n    if(props.isPlaying) {\r\n        buttonTxt = 'Stop';\r\n    } else {\r\n        buttonTxt = 'Start';\r\n    }\r\n\r\n    return (\r\n        <div className=\"metronome-container\">\r\n            <div className=\"metronome-input-box\">\r\n                <div className=\"bpm-display\">{props.bpm} BPM</div>\r\n                <input type=\"range\" min=\"40\" max=\"220\" onChange={props.onChangeInput}/>\r\n            </div>\r\n                <button className=\"positive large ui button\" onClick={props.startMetronome}>{buttonTxt}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Metronome;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Metronome from './Metronome';\r\nimport click2 from '../sounds/click2.wav';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bpm: 40,\r\n            isPlaying: false,\r\n        };\r\n\r\n        this.click2 = new Audio(click2);\r\n    }\r\n    \r\n    onChangeInput = (e) => {\r\n        // console.log(e.target.value);\r\n        if (this.state.isPlaying) {\r\n            clearInterval(this.metronome);\r\n            this.metronome = setInterval(this.play, (60 / this.state.bpm) * 1000);\r\n\r\n            this.setState({\r\n              bpm: e.target.value\r\n            });\r\n          } else {\r\n            this.setState({ bpm: e.target.value });\r\n          }\r\n    };\r\n    \r\n    play = () => {\r\n        this.click2.play()\r\n    };\r\n\r\n    startMetronome = () => {\r\n        if(this.state.isPlaying) {\r\n            clearInterval(this.metronome);\r\n            this.setState({\r\n                isPlaying: false\r\n            });\r\n        } else {\r\n            this.metronome = setInterval(\r\n                this.play,\r\n                (60 / this.state.bpm) * 1000\r\n              );\r\n              this.setState(\r\n                {\r\n                  isPlaying: true\r\n                },\r\n                this.play\r\n              );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Header />\r\n                <Metronome \r\n                    onChangeInput={this.onChangeInput}\r\n                    bpm={this.state.bpm}\r\n                    startMetronome={this.startMetronome}\r\n                    isPlaying={this.state.isPlaying}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}